package OOP.interfacePrimer.javarush.Duck_Swimmable;

public interface Swimmable {

    public default void swim(){
        System.out.println("Плыви!");
    }

    public void eat();
    public void run();

}



/*
Наверняка ты уже обратил внимание, что методы в интерфейсах всегда «пустые»,
то есть они не имеют реализации.
Причина этого проста: интерфейс описывает поведение, а не реализует его.
«Все объекты классов, имплементирующих интерфейс Swimmable, должны уметь плавать»:
вот и все, что говорит нам интерфейс. Как там конкретно будет плавать рыба, утка
или лошадь — вопрос к классам Fish, Duck и Horse, а не к интерфейсу. Также как
переключение канала — задача телевизора. Пульт просто предоставляет тебе кнопку для этого.
Впрочем, в Java8 появилось интересное дополнение — методы по умолчанию (default method).
Например, в твоем интерфейсе есть 10 методов. 9 из них реализованы по-разному в разных
классах, но один реализован одинаково у всех. Раньше, до выхода Java8, методы внутри
интерфейсов вообще не имели реализации: компилятор сразу выдавал ошибку. Теперь же
можно сделать вот так:
 */
